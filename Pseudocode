BEGIN
// Inventory Management System

Initialize an empty dictionary called inventory

Define function batchdate(date_str):
    Try to convert date_str to datetime object with format "YY/MM//DD"
    If successful:
        Return datetime object
    Else:
        Display "Invalid date format" message
        Return None

Define function errormessage(prompt):
    Loop until valid input is provided:
        Try to input an integer for the prompt
        If input is valid:
            Return the integer value
        Else:
            Display "Invalid input" message

Define function add_product():
    Input product name (convert to lowercase)
    Input batch date (YY/MM//DD format)
    Call batchdate() to validate the date
    If date is invalid:
        Return
    
    Try to input quantity as integer using errormessage()
    If invalid:
        Display "Invalid quantity" message
        Return
    
    If product exists in inventory and has logged batches:
        Ask if same unit cost as last logged batch
        If "yes":
            Get cost from most recent batch of product
        Else:
            Input new unit cost using errormessage()
            If invalid:
                Display "Invalid cost" message
                Return
    Else:
        Input unit cost using errormessage()
        If invalid:
            Display "Invalid cost" message
            Return
    
    Create new batch with product name, batch date, quantity, and unit cost
    Add the batch to the inventory for this product
    Display "Product added" confirmation message

Define function remove_product():
    Input product name to remove (convert to lowercase)
    If product not in inventory or no batches exist for product:
        Display "Product not found" message
        Return
    
    Input quantity to remove using errormessage()
    If invalid:
        Display "Invalid input" message
        Return
    
    Sort product batches by date (newest first)
    
    Initialize removed counter to 0
    
    While quantity to remove > 0 and batches exist:
        Get newest batch
        If batch quantity <= quantity to remove:
            Subtract batch quantity from quantity to remove
            Add batch quantity to removed counter
            Remove batch from inventory
        Else:
            Subtract quantity to remove from batch quantity
            Add quantity to removed counter
            Set quantity to remove to 0
    
    If removed counter > 0:
        Display removal confirmation message
    Else:
        Display "Not enough quantity" message

Define function check_inventory():
    If inventory is empty:
        Display "Inventory is empty" message
        Return
    
    Display inventory header (Product, Batch Date, Quantity, Unit Cost)
    For each product in sorted order of product name:
        Sort batches by date (newest first)
        For each batch:
            Display product name, batch date, quantity, and unit cost

Define function search_product():
    Input product name to search (convert to lowercase)

    If product exists in inventory:
        Sort product batches by date (newest first)
        Display search results with batch dates, quantities, and unit costs
    Else:
        Display "Product not found" message

Define function menu():
    Display welcome message
    
    Loop forever:
        Ask user if they want to continue (yes/no)
        If yes:
            Break loop
        Else if no:
            Display "Goodbye"
            Exit program
        Else:
            Display "Invalid input" message
    
    Loop forever:
        Display menu options:
            1. Add product
            2. Remove product
            3. Check inventory
            4. Search for a product
            5. Exit
        
        Input user choice
        
        If choice is 1:
            Call add_product()
        Else if choice is 2:
            Call remove_product()
        Else if choice is 3:
            Call check_inventory()
        Else if choice is 4:
            Call search_product()
        Else if choice is 5:
            Display goodbye message
            Break loop
        Else:
            Display "Invalid choice" message

Call menu()
END
